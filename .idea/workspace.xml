<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bc919bcf-1e26-46bb-b2ef-6e7f2d3576a8" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/App.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/App.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/components/atoms/Button/index.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/components/atoms/Button/index.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/components/atoms/ThemeToggle/index.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/components/atoms/ThemeToggle/index.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/contexts/theme/ThemeContext.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/contexts/theme/ThemeContext.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/contexts/theme/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/contexts/theme/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/contexts/theme/theme.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/contexts/theme/theme.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/contexts/theme/types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/contexts/theme/types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/hooks/useTheme.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/hooks/useTheme.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/hooks/useTheme.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/hooks/useTheme.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/main.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/main.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/styles/_index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/styles/_index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/styles/themes/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/styles/themes/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/test.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/test/dom.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/test/mocks/theme.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/test/mocks/theme.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/test/setup/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/test/setup/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/web/src/test/utils/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/web/src/test/utils/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/assets/react.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/Button/index.stories.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/Button/index.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/Button/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/Button/styles.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/ThemeToggle/index.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/ThemeToggle/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/atoms/ThemeToggle/styles.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/contexts/theme/ThemeContext.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/contexts/theme/ThemeProvider.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/contexts/theme/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/contexts/theme/theme.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/contexts/theme/types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hooks/useTheme.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/_index.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/_mixins.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/_reset.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/_variables.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/global.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/themes/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/mocks/theme.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/setup/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/types/jest-dom.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/utils/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/verify.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/scss.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vite-env.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vite.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/vite.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vitest.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/vitest.config.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2oNmFaGef6mjPx37npE3kx3uAM2" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;Wallaby.js.Wallaby.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/veeuye/projects/personal/vite-react-starter-project&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/Users/veeuye/projects/personal/compound-interest-calculator/node_modules/prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;actions.on.save&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/veeuye/projects/personal/full-stack-skeleton/node_modules/typescript/lib&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Wallaby" type="wallaby" factoryName="wallaby" configType="Automatic" configFolder="$PROJECT_DIR$" wsl="No" SmartStart="No">
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-WS-241.15989.105" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bc919bcf-1e26-46bb-b2ef-6e7f2d3576a8" name="Changes" comment="" />
      <created>1730718304226</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1730718304226</updated>
      <workItem from="1730718305592" duration="24869000" />
      <workItem from="1730816924995" duration="9104000" />
      <workItem from="1730904652214" duration="2146000" />
      <workItem from="1730977902145" duration="19000" />
      <workItem from="1730977926666" duration="1990000" />
      <workItem from="1731264523728" duration="1178000" />
      <workItem from="1731265847175" duration="2512000" />
      <workItem from="1731268371906" duration="1737000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>